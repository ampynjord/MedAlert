events {
    worker_connections 1024;
}

http {
    # Configuration SSL moderne
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Configuration sécurité
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://fonts.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss: https:; manifest-src 'self';" always;

    # Types MIME
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Redirection HTTP vers HTTPS
    server {
        listen 80;
        server_name _;

        # Redirection permanente vers HTTPS
        return 301 https://$host$request_uri;
    }

    # Configuration HTTPS pour localhost
    server {
        listen 443 ssl http2;
        listen 8443 ssl http2;
        server_name localhost 127.0.0.1;

        # Certificats SSL localhost
        ssl_certificate     /etc/nginx/certs/localhost-cert.pem;
        ssl_certificate_key /etc/nginx/certs/localhost-key.pem;

        # Headers de sécurité HTTPS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Sert les fichiers statiques critiques (service worker, manifest, icônes)
        location = /service-worker.js {
            proxy_pass https://web:8443/service-worker.js;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;

            # Headers pour Service Worker
            add_header Service-Worker-Allowed "/" always;
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        }

        location = /manifest.json {
            proxy_pass https://web:8443/manifest.json;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }

        location ~* \.(png|ico|svg|jpg|jpeg|gif|webp)$ {
            proxy_pass https://web:8443$request_uri;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;

            # Cache pour les ressources statiques
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Proxy API backend sécurisé (toutes les routes /api)
        location /api {
            proxy_pass https://backend:3443;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_ssl_verify off;

            # Headers pour API
            proxy_set_header Accept-Encoding "";
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # Sert le frontend statique via HTTPS interne
        location / {
            proxy_pass https://web:8443;
            proxy_ssl_verify off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;

            # Headers pour PWA
            add_header X-Robots-Tag "noindex, nofollow" always;
        }

        # WebSocket support (pour les notifications temps réel)
        location /ws {
            proxy_pass https://web:8443;
            proxy_ssl_verify off;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }

    # Configuration HTTPS pour le domaine (production uniquement)
    # Décommentez ce bloc en production avec votre domaine
    # server {
    #     listen 443 ssl http2;
    #     listen 8443 ssl http2;
    #     server_name ampynjord.bzh *.ampynjord.bzh 137.74.40.159;
    #
    #     # Certificats SSL pour le domaine
    #     ssl_certificate     /etc/nginx/certs/ampynjord.bzh-cert.pem;
    #     ssl_certificate_key /etc/nginx/certs/ampynjord.bzh-key.pem;
    #
    #     # Headers de sécurité HTTPS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    #
    #     # Sert les fichiers statiques critiques (service worker, manifest, icônes)
    #     location = /service-worker.js {
    #         proxy_pass http://web:8090/service-worker.js;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto https;
    #
    #         # Headers pour Service Worker
    #         add_header Service-Worker-Allowed "/" always;
    #         add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    #     }
    #
    #     location = /manifest.json {
    #         proxy_pass http://web:8090/manifest.json;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto https;
    #     }
    #
    #     location ~* \.(png|ico|svg|jpg|jpeg|gif|webp)$ {
    #         proxy_pass http://web:8090$request_uri;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto https;
    #
    #         # Cache pour les ressources statiques
    #         expires 1y;
    #         add_header Cache-Control "public, immutable";
    #     }
    #
    #     # Proxy API backend sécurisé (toutes les routes /api)
    #     location /api {
    #         proxy_pass https://backend:3443;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto https;
    #         proxy_ssl_verify off;
    #
    #         # Headers pour API
    #         proxy_set_header Accept-Encoding "";
    #         proxy_buffering off;
    #         proxy_request_buffering off;
    #     }
    #
    #     # Sert le frontend statique via HTTP interne
    #     location / {
    #         proxy_pass http://web:8090;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto https;
    #
    #         # Headers pour PWA
    #         add_header X-Robots-Tag "noindex, nofollow" always;
    #     }
    #
    #     # WebSocket support (pour les notifications temps réel)
    #     location /ws {
    #         proxy_pass http://web:8090;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto https;
    #     }
    # }
}
