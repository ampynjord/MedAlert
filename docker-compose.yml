services:
  backend:
    build: ./src/backend
    container_name: medalert-backend
    expose:
      - "3000"
    env_file:
      - .env
    volumes:
      - database-data:/app/database
    restart: unless-stopped
    networks:
      - medalert-internal
      - traefik-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-proxy"
      # Routes API (priorité haute pour intercepter avant web)
      - "traefik.http.routers.medalert-api.rule=(Host(`medalert.ampynjord.bzh`) || Host(`www.medalert.ampynjord.bzh`)) && (PathPrefix(`/api`) || PathPrefix(`/auth`))"
      - "traefik.http.routers.medalert-api.entrypoints=websecure"
      - "traefik.http.routers.medalert-api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.medalert-api.service=medalert-api"
      - "traefik.http.routers.medalert-api.priority=100"
      - "traefik.http.services.medalert-api.loadbalancer.server.port=3000"
      - "traefik.http.services.medalert-api.loadbalancer.server.scheme=http"

  discord-bot:
    build: ./src/discord
    container_name: medalert-discord
    env_file:
      - .env
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - medalert-internal

  web:
    build: ./src/web
    container_name: medalert-web
    expose:
      - "8090"
    env_file:
      - .env
    depends_on:
      - backend
    restart: unless-stopped
    volumes:
      - ./src/web:/app
      - /app/node_modules
    networks:
      - medalert-internal
      - traefik-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-proxy"
      # Routes frontend (priorité basse)
      - "traefik.http.routers.medalert-web.rule=Host(`medalert.ampynjord.bzh`) || Host(`www.medalert.ampynjord.bzh`)"
      - "traefik.http.routers.medalert-web.entrypoints=websecure"
      - "traefik.http.routers.medalert-web.tls.certresolver=letsencrypt"
      - "traefik.http.routers.medalert-web.service=medalert-web"
      - "traefik.http.routers.medalert-web.priority=10"
      - "traefik.http.services.medalert-web.loadbalancer.server.port=8090"
      - "traefik.http.services.medalert-web.loadbalancer.server.scheme=http"

networks:
  medalert-internal:
    driver: bridge
  traefik-proxy:
    external: true

volumes:
  database-data:
    driver: local
